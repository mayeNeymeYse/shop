name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if secrets are configured
        run: |
          if [ -z "${{ secrets.ADMIN_USERNAME }}" ] || [ -z "${{ secrets.ADMIN_PASSWORD }}" ]; then
            echo "‚ö†Ô∏è Secrets non configur√©s - Le fichier env.js gardera les valeurs par d√©faut"
            echo "   Pour configurer: Repository Settings ‚Üí Secrets ‚Üí Actions"
            echo "   Ajoutez: ADMIN_USERNAME et ADMIN_PASSWORD"
          else
            echo "‚úÖ Secrets GitHub configur√©s, remplacement en cours..."
          fi

      - name: Replace placeholders in env.js with GitHub secrets
        run: |
          if [ -f "env.js" ]; then
            echo "üìù Remplacement des placeholders dans env.js..."
          
            # Faire une copie de sauvegarde
            cp env.js env.js.backup
          
            # Remplacer les placeholders avec les secrets (si d√©finis)
            if [ -n "${{ secrets.ADMIN_USERNAME }}" ]; then
              sed -i "s/{{GITHUB_ADMIN_USERNAME}}/${{ secrets.ADMIN_USERNAME }}/g" env.js
              echo "‚úÖ ADMIN_USERNAME remplac√©"
            else
              # Fallback vers valeur par d√©faut
              sed -i "s/{{GITHUB_ADMIN_USERNAME}}/admin/g" env.js
              echo "‚ö†Ô∏è ADMIN_USERNAME ‚Üí valeur par d√©faut (admin)"
            fi
          
            if [ -n "${{ secrets.ADMIN_PASSWORD }}" ]; then
              sed -i "s/{{GITHUB_ADMIN_PASSWORD}}/${{ secrets.ADMIN_PASSWORD }}/g" env.js
              echo "‚úÖ ADMIN_PASSWORD remplac√©"
            else
              # Fallback vers valeur par d√©faut
              sed -i "s/{{GITHUB_ADMIN_PASSWORD}}/gallery2024/g" env.js
              echo "‚ö†Ô∏è ADMIN_PASSWORD ‚Üí valeur par d√©faut (gallery2024)"
            fi
          
            echo "üìÑ Fichier env.js mis √† jour avec succ√®s"
          else
            echo "‚ùå Fichier env.js non trouv√©!"
            exit 1
          fi

      - name: Verify env.js content (sans r√©v√©ler les secrets)
        run: |
          echo "=== V√©rification du fichier env.js ==="
          if grep -q "{{GITHUB_" env.js; then
            echo "‚ùå Des placeholders n'ont pas √©t√© remplac√©s!"
            grep "{{GITHUB_" env.js
            exit 1
          else
            echo "‚úÖ Tous les placeholders ont √©t√© remplac√©s"
          fi
          
          # Afficher le contenu en masquant les valeurs sensibles
          echo "üìã Structure du fichier (valeurs masqu√©es):"
          sed 's/ADMIN_USERNAME: .*/ADMIN_USERNAME: "***",/' env.js | sed 's/ADMIN_PASSWORD: .*/ADMIN_PASSWORD: "***",/'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Post-deployment info
        run: |
          echo "üöÄ D√©ploiement termin√©!"
          echo "üåê Site: ${{ steps.deployment.outputs.page_url }}"
          echo "üîß Test env.js: ${{ steps.deployment.outputs.page_url }}env.js"
          echo ""
          if [ -n "${{ secrets.ADMIN_USERNAME }}" ]; then
            echo "‚úÖ Identifiants personnalis√©s utilis√©s"
          else
            echo "‚ö†Ô∏è Identifiants par d√©faut: admin / gallery2024"
          fi